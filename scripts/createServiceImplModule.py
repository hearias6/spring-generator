import fileModule

def createServiceImpl(ruta, nombreClase):
    claseServiceImpl = nombreClase + "ServiceImpl"
    claseDao = nombreClase + "Dao"
    contenido = "package com.resident.app.services; \n\n"
    contenido += "import java.util.ArrayList; \n"
    contenido += "import java.util.List; \n"
    contenido += "import org.springframework.beans.factory.annotation.Autowired; \n"
    contenido += "import org.springframework.http.HttpStatus; \n"
    contenido += "import org.springframework.http.ResponseEntity; \n"
    contenido += "import org.springframework.stereotype.Service; \n"
    contenido += "import com.resident.app.dao."+claseDao.capitalize()+"; \n"
    contenido += "import com.resident.app.entities.Usuario; \n"
    contenido += "import com.resident.app.response.Response; \n\n"
    contenido += "@Service \n"
    contenido += "public class "+ claseServiceImpl +" implements "+nombreClase+"Service { \n\n"
    contenido += "\t@Autowired \n"
    contenido += "\tprivate "+claseDao+" "+claseDao.capitalize()+"; \n\n"
    contenido += "\t@Override \n"
    contenido += "\tpublic ResponseEntity<Response> save("+ nombreClase +" entity) { \n"
    contenido += "\t\ttry { \n"
    contenido += "\t\t\t"+claseDao.capitalize()+".save(entity); \n"
    contenido += "\t\t\tResponse respuesta = new Response(\"Se ha creado con exito\",HttpStatus.CREATED); \n"
    contenido += "\t\t\treturn new ResponseEntity<Response>(respuesta, HttpStatus.CREATED);  \n"
    contenido += "\t\t} catch (Exception e) { \n"
    contenido += "\t\t\tResponse respuesta = new Response(\"Error\",HttpStatus.INTERNAL_SERVER_ERROR); \n"
    contenido += "\t\t\treturn new ResponseEntity<Response>(respuesta, HttpStatus.INTERNAL_SERVER_ERROR); \n"
    contenido += "\t\t} \n"
    contenido += "\t} \n\n"
    contenido += "\t@Override \n"
    contenido += "\tpublic ResponseEntity<Response> findAll() { \n"
    contenido += "\t\tList<Usuario> lista = new ArrayList<Usuario>(); \n"
    contenido += "\t\ttry { \n"
    contenido += "\t\t\tlista = "+claseDao.capitalize()+".findAll(); \n"
    contenido += "\t\t\tResponse respuesta = new Response(lista,HttpStatus.OK); \n"
    contenido += "\t\t\treturn new ResponseEntity<Response>(respuesta, HttpStatus.OK); \n"
    contenido += "\t\t} catch (Exception e) { \n"
    contenido += "\t\t\tResponse respuesta = new Response(\"Error\",HttpStatus.INTERNAL_SERVER_ERROR); \n"
    contenido += "\t\t\treturn new ResponseEntity<Response>(respuesta, HttpStatus.INTERNAL_SERVER_ERROR); \n"
    contenido += "\t\t} \n"
    contenido += "\t} \n\n"
    contenido += "\t@Override \n"
    contenido += "\tpublic ResponseEntity<Response> findAllWithPaginate() { \n"
    contenido += "\t\treturn null; \n"
    contenido += "\t} \n\n"
    contenido += "\t@Override \n"
    contenido += "\tpublic ResponseEntity<Response> findById(Long id) { \n"
    contenido += "\t\treturn null; \n"
    contenido += "\t} \n\n"
    contenido += "\t@Override \n"
    contenido += "\tpublic ResponseEntity<Response> update(Usuario entity) { \n"
    contenido += "\t\ttry { \n"
    contenido += "\t\t\t"+claseDao.capitalize()+".save(entity); \n"
    contenido += "\t\t\tResponse respuesta = new Response(\"Se ha actualizado con exito\",HttpStatus.CREATED); \n"
    contenido += "\t\t\treturn new ResponseEntity<Response>(respuesta, HttpStatus.CREATED);  \n"
    contenido += "\t\t} catch (Exception e) { \n"
    contenido += "\t\t\tResponse respuesta = new Response(\"Error\",HttpStatus.INTERNAL_SERVER_ERROR); \n"
    contenido += "\t\t\treturn new ResponseEntity<Response>(respuesta, HttpStatus.INTERNAL_SERVER_ERROR); \n"
    contenido += "\t\t} \n"
    contenido += "\t} \n\n"
    contenido += "\t@Override \n"
    contenido += "\tpublic ResponseEntity<Response> deleteById(Long id) { \n"
    contenido += "\t\ttry { \n"
    contenido += "\t\t\t"+claseDao.capitalize()+".deleteById(id); \n"
    contenido += "\t\t\tResponse respuesta = new Response(\"Se ha eliminado con exito\",HttpStatus.CREATED);\n"
    contenido += "\t\t\treturn new ResponseEntity<Response>(respuesta, HttpStatus.CREATED); \n"
    contenido += "\t\t} catch (Exception e) {\n"
    contenido += "\t\t\tResponse respuesta = new Response(\"Error\",HttpStatus.INTERNAL_SERVER_ERROR);\n"
    contenido += "\t\t\treturn new ResponseEntity<Response>(respuesta, HttpStatus.INTERNAL_SERVER_ERROR);\n"
    contenido += "\t\t}\n"
    contenido += "\t}\n\n"
    contenido += "}\n"

    path = ruta + claseServiceImpl + ".java"
    file_java_serviceImpl = fileModule.establecerArchivo(path,'w')
    fileModule.escribirArchivo(file_java_serviceImpl,contenido)